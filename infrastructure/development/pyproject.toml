[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tres-en-raya-game"
version = "2.0.0"
description = "A Tic Tac Toe game with local, web, and multiplayer versions with AI opponent"
readme = "README.md"
authors = [
    {name = "Crypt0xDev", email = "alexis.alvarado@unsm.edu.pe"}
]
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "Flask>=3.1.0,<4.0.0",
    "Flask-SocketIO>=5.4.0,<6.0.0",
    "requests>=2.32.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0,<9.0.0",
    "pytest-cov>=6.0.0,<7.0.0",
    "black>=24.8.0,<25.0.0",
    "flake8>=7.1.0,<8.0.0", 
    "isort>=5.13.0,<6.0.0",
    "mypy>=1.11.0,<2.0.0",
    "pre-commit>=4.0.0,<5.0.0",
    "bandit>=1.8.0,<2.0.0",
]

[project.scripts]
tres-en-raya-cli = "src.interfaces.cli.main:main"
tres-en-raya-web = "src.interfaces.web.app:run"

# Black Configuration
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort Configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
src_paths = ["game", "application", "delivery_mechanisms", "persistence", "infrastructure", "tests"]

# MyPy Configuration
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = ["tests.*"]
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Bandit Configuration
[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101"]  # Skip assert_used test

# Coverage Configuration  
[tool.coverage.run]
source = ["game", "application", "delivery_mechanisms", "persistence", "infrastructure"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*",
    "*/.venv/*",
    "*/venv/*",
    "*/infrastructure/development/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"